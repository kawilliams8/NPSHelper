{"version":3,"sources":["assets/images/US-NationalParkService-Logo.svg","assets/images/loading.gif","assets/images/star.png","assets/images/image-not-found.jpg","reducers/storeParksReducer.js","reducers/storeMontsReducer.js","reducers/storeOthersReducer.js","reducers/favoritesReducer.js","reducers/index.js","actions/index.js","containers/App/key.js","apiCalls/apiCalls.js","components/Home/Home.js","containers/ParksContainer/ParksContainer.js","components/Trail/Trail.js","components/TrailsContainer/TrailsContainer.js","containers/Park/Park.js","components/NoMatch/NoMatch.js","containers/App/App.js","index.js"],"names":["module","exports","storeParksReducer","state","action","type","parks","storeMontsReducer","monts","storeOthersReducer","others","favoritesReducer","park","remainingFavs","filter","id","rootReducer","combineReducers","favorites","addFavorite","removeFavorite","key","fetchParks","a","url","fetch","response","ok","Error","json","data","fetchTrails","trails","Home","className","src","Arrowhead","alt","connect","props","parkCards","map","parkCode","name","states","designation","description","to","style","textDecoration","window","location","pathname","Star","Trail","trail","imgSmall","length","summary","ascent","descent","TrailsContainer","lat","long","this","latLong","split","substring","setState","then","catch","error","message","trailCards","index","Component","dispatch","console","log","mapUrl","img","notFound","images","fullName","onClick","directionsInfo","href","weatherInfo","target","rel","NoMatch","App","filterAndStoreParks","natlParks","storeParks","natlMonts","storeMonts","natlOthers","storeOthers","isLoading","Loading","exact","path","component","render","match","params","find","store","createStore","composeWithDevTools","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7acf2759.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/US-NationalParkService-Logo.f79ef61f.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a98b37d5.gif\";","module.exports = __webpack_public_path__ + \"static/media/star.cf113f51.png\";","module.exports = __webpack_public_path__ + \"static/media/image-not-found.05c6e0d2.jpg\";","const storeParksReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'STORE_PARKS':\n      return action.parks;\n    default:\n      return state;\n  }\n}\n\nexport default storeParksReducer;","const storeMontsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'STORE_MONTS':\n      return action.monts;\n    default:\n      return state;\n  }\n}\n\nexport default storeMontsReducer;","const storeOthersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'STORE_OTHERS':\n      return action.others;\n    default:\n      return state;\n  }\n}\n\nexport default storeOthersReducer;","const favoritesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_FAVORITE':\n      return [...state, action.park];\n    case 'REMOVE_FAVORITE':\n      let remainingFavs = state.filter(park => park.id !== action.park.id)\n      return remainingFavs;\n    default:\n      return state;\n  }\n}\n\nexport default favoritesReducer;","import { combineReducers } from 'redux';\nimport storeParksReducer from '../reducers/storeParksReducer';\nimport storeMontsReducer from '../reducers/storeMontsReducer';\nimport storeOthersReducer from '../reducers/storeOthersReducer';\nimport favoritesReducer from '../reducers/favoritesReducer';\n\nconst rootReducer = combineReducers({\n  parks: storeParksReducer,\n  monts: storeMontsReducer,\n  others: storeOthersReducer,\n  favorites: favoritesReducer,\n});\n\nexport default rootReducer;","export const storeParks = parks => ({\n  type: 'STORE_PARKS',\n  parks\n});\n\nexport const storeMonts = monts => ({\n  type: 'STORE_MONTS',\n  monts\n});\n\nexport const storeOthers = others => ({\n  type: 'STORE_OTHERS',\n  others\n});\n\nexport const addFavorite = park => ({\n  type: 'ADD_FAVORITE',\n  park\n});\n\nexport const removeFavorite = park => ({\n  type: 'REMOVE_FAVORITE',\n  park\n});","export const key = {\n  nps_api_key: \"QomvgsvmorPYvw6JPfQ2Puk6z7iasUP1tR7gloBQ\",\n  mb_api_key: \"pk.eyJ1Ijoia2F3aWxsaWFtczgiLCJhIjoiY2swaWNvM2liMGJ4dDNjbGV2aGhvNHVwdiJ9.omOH_S9FQH-fjgcS0iDA5A\"\n}","import { key } from '../containers/App/key.js';\n\nexport const fetchParks = async () => {\n  const url = `https://developer.nps.gov/api/v1/parks?api_key=${key.nps_api_key}`\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('There was an error loading the parks')\n  }\n  const parks = await response.json();\n  return parks.data;\n}\n\nexport const fetchTrails = async (url) => { \n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('There was an error loading the trails')\n  }\n  const trails = await response.json();\n  return trails;\n}","import React from 'react';\nimport Arrowhead from '../../assets/images/US-NationalParkService-Logo.svg';\nimport './Home.css';\n\nconst Home = () => {\n  return (\n    <div className=\"Home\">\n      <h2 className=\"Home-welcome\">National Park System of the U.S.</h2>\n      <section className=\"Home-nps-info\">\n      <img src={Arrowhead} alt=\"National Parks Service arrowhead logo\" className=\"Home-arrowhead\"/>\n      <div className=\"Home-info-wrapper\">\n        <p>The National Park System is the collection of physical properties owned or administered by the National Park Service. The collection includes all national parks and most national monuments, as well as several other types of protected areas of the United States. As of March 2019, there are 419 units of the National Park System.</p>\n        <p>The National Register of Historic Places (NRHP), which contains nearly 79,000 entries, is administered by the National Park Service. All historically significant park units are automatically included on the NRHP—i.e., all national historical parks and historic sites, national battlefields and military parks, and national memorials, as well as some national monuments.</p>\n        <p>National Park System units are found in all 50 states, in Washington, D.C., and in the U.S.territories of Guam, the Northern Mariana Islands, American Samoa, the U.S.Virgin Islands, and Puerto Rico.</p >\n        <p>Nearly all units managed by the National Park Service participate in the National Park Passport Stamps program.</p>\n      </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Star from '../../assets/images/star.png';\nimport './ParksContainer.css';\n\nexport const ParksContainer = (props) => {\n  const { type } = props;\n  const parkCards = props[type].map(park => {\n    const { id, parkCode, name, states, type, designation, description } = park;\n    return (\n      <Link to={`/${type}/${parkCode}`} style={{ textDecoration: 'none' }}>\n        <div className=\"Park-link\" key={id} type={type}>\n          <h3 className=\"Park-link-heading\">\n            {window.location.pathname === '/favorites' && <img className=\"Favorites-star\" src={Star} alt=\"star\"/>}\n            {name}\n            </h3>\n          <h4 className=\"Park-link-body\">{designation}</h4>\n          <h4 className=\"Park-link-body\">{states}</h4>\n          <p className=\"Park-link-description\">{description}</p>\n          <p className=\"Park-link-ellipsis\">...</p>\n          <Link to={`/parks/${parkCode}`} className=\"Park-link-more\">Read More...</Link>\n        </div>\n      </Link>\n    )\n  })\n\n  return (\n    <section className={`ParksContainer ${type}`}>\n      {parkCards}\n    </section>\n  )\n}\n\nexport const mapStateToProps = state => ({\n  parks: state.parks,\n  monts: state.monts,\n  others: state.others,\n  favorites: state.favorites\n});\n\nexport default connect(mapStateToProps)(ParksContainer);\n\nParksContainer.propTypes = {\n  props : PropTypes.shape({\n    dispatch : PropTypes.func,\n    favorites : PropTypes.array,\n    parks : PropTypes.array,\n    others: PropTypes.array,\n    monts : PropTypes.array,\n    type : PropTypes.string\n  })\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Trail/Trail.css';\n\nconst Trail = ({ trail }) => {  \n  return (\n    <article className=\"Trail\">\n      <img src={trail.imgSmall} alt={trail.name} className=\"Trail-image\"/>\n      <div className=\"Trail-info-wrapper\">\n      <h3>{trail.name}, Distance: {trail.length} miles</h3>\n      <h4>{trail.summary}</h4>\n      <h4>Ascent: {trail.ascent} feet, Descent: {trail.descent} feet</h4>\n      </div>\n    </article>\n  )\n}\n\nexport default Trail;\n\nTrail.propTypes = {\n  props: PropTypes.shape({\n    description: PropTypes.string,\n    designation: PropTypes.string,\n    directionsInfo: PropTypes.string,\n    directionsUrl: PropTypes.string,\n    fullName: PropTypes.string,\n    id: PropTypes.string,\n    latLong: PropTypes.string,\n    name: PropTypes.string,\n    parkCode: PropTypes.string,\n    states: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    weatherInfo: PropTypes.string,\n  })\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Trail from '../Trail/Trail';\nimport './TrailsContainer.css';\nimport { fetchTrails } from '../../apiCalls/apiCalls';\n\nexport default class TrailsContainer extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    lat: \"\",\n    long: \"\",\n    url: \"\",\n    trails: []\n  }\n}\n\n  componentDidMount () {\n    let lat, long;\n    if (this.props.data.latLong) {\n        try {\n        lat = this.props.data.latLong.split(\" \")[0].substring(4, 12);\n        long = this.props.data.latLong.split(\" \")[1].substring(5, 15);\n        this.setState({lat: lat, long: long})\n      } finally {\n        this.setState({ url: `https://www.trailrunproject.com/data/get-trails?lat=${lat}&lon=${long}&maxDistance=10&key=200590238-ef474523460511c3d882949ee2312c21` })\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.trails.length < 1) {\n      fetchTrails(this.state.url)\n      .then(data => this.setState({trails: data.trails}))\n      .catch(error => this.setState({error: error.message}))\n    }\n  }\n  \n  render() {\n    const trailCards = this.state.trails.map((trail, index) => {\n      return <Trail trail={trail} key={index}/>\n    });\n\n    return (\n      <section className=\"TrailsContainer\">\n        <h3 className=\"Trails-info-subheading\">Hiking/Running Trails near {this.props.data.name}:</h3>\n        {this.state.trails.length < 1 && <h4>No trails found near this National Park... Volunteer and build one!</h4>}\n        {trailCards}\n      </section>\n    )\n  }\n};\n\nTrailsContainer.propTypes = {\n  props: PropTypes.shape({\n    description: PropTypes.string,\n    designation: PropTypes.string,\n    directionsInfo: PropTypes.string,\n    directionsUrl: PropTypes.string,\n    fullName: PropTypes.string,\n    id: PropTypes.string,\n    latLong: PropTypes.string,\n    name: PropTypes.string,\n    parkCode: PropTypes.string,\n    states: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    weatherInfo: PropTypes.string,\n  })\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addFavorite, removeFavorite } from '../../actions';\nimport Trails from '../../components/TrailsContainer/TrailsContainer';\nimport notFound from '../../assets/images/image-not-found.jpg';\nimport { key } from '../App/key';\nimport './Park.css';\n\nexport const Park = (props) => { \n  const { park } = props;\n  console.log(park)\n  let lat, long, mapUrl = \"\";\n  if (park.latLong) {\n    lat = park.latLong.split(\" \")[0].substring(4);\n    long = park.latLong.split(\" \")[1].substring(5);\n    mapUrl = `https://api.mapbox.com/styles/v1/mapbox/light-v9/static/${long},${lat}5,0,0/500x400?access_token=${key.mb_api_key}`\n  }\n  let img = notFound; \n  if (park.images) {\n    img = park.images[0].url\n  }\n\n  return (\n    <section className=\"Park\">\n      <h2 className=\"Park-heading\">{park.name}</h2>\n      <h3 className=\"Park-subheading\">Full Name: {park.fullName}</h3>\n      <h3 className=\"Park-subheading\">Designation: {park.designation}</h3>\n      <h3 className=\"Park-subheading\">Home State: {park.states}</h3>\n      <div className=\"Park-button-wrapper\">\n        <button className=\"Park-fave-button\" onClick={() => props.addFavorite(park)}>Add to Favorites</button>\n        <button className=\"Park-fave-button\" onClick={() => props.removeFavorite(park)}>Remove from Favorites</button>\n      </div>\n      <div className=\"Park-images-wrapper\">\n        <img className=\"Park-card-image\" src={img} alt={park.fullName} />\n        {park.latLong && <img className=\"Park-card-image\" src={mapUrl} alt='map' />}\n      </div>\n      <div className=\"Park-info-cards\">\n        <article className=\"Park-card-info\">\n          <h3 className=\"Park-info-subheading\">Description:</h3>\n          <h3>{park.description}</h3>\n          <h3 className=\"Park-info-subheading\">Directions:</h3>\n          <h3>{park.directionsInfo}</h3>\n          <h3 className=\"Park-info-subheading\">Weather:</h3>\n          <a className=\"Park-weather-link\" href={park.weatherInfo} target=\"_blank\" rel=\"noopener noreferrer\">View Current Weather Report</a>\n          <h3 className=\"Park-info-subheading\">Further Information:</h3>\n          <a className=\"Park-site-link\" href={park.url} target=\"_blank\" rel=\"noopener noreferrer\">Official Site</a>\n        </article>\n        <Trails data={park}/>\n      </div>\n      <Link to=\"/parks\" className=\"Park-final-link\">RETURN</Link>\n    </section>\n  )\n}\n\nexport const mapStateToProps = state => ({\n  parks: state.parks,\n  monts: state.monts,\n  others: state.others,\n  favorites: state.favorites\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  addFavorite: park => dispatch(addFavorite(park)),\n  removeFavorite: park => dispatch(removeFavorite(park))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Park);\n\nPark.propTypes = {\n  props : PropTypes.shape({\n    addfavorite : PropTypes.func,\n    removeFavorite : PropTypes.func,\n    parks : PropTypes.array,\n    monts: PropTypes.array,\n    others : PropTypes.array,\n    favorites : PropTypes.array,\n    park: PropTypes.object\n  })\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Arrowhead from '../../assets/images/US-NationalParkService-Logo.svg';\nimport '../NoMatch/NoMatch.css';\n\nconst NoMatch = () => {\n  return (\n    <div className=\"NoMatch\"> \n      <h2>Sorry, you've gone off trail.</h2>\n      <h3>Return to the {<NavLink to=\"/\" className=\"NoMatch-NavText\">Welcome Center</NavLink>}</h3>\n      <img src={Arrowhead} alt=\"National Parks Service arrowhead logo\" className=\"NoMatch=arrowhead\"/>\n    </div>\n  )\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport { storeParks, storeMonts, storeOthers, addFavorite, removeFavorite } from '../../actions';\nimport { fetchParks } from '../../apiCalls/apiCalls';\nimport { connect } from 'react-redux';\nimport Loading from '../../assets/images/loading.gif';\nimport Home from '../../components/Home/Home';\nimport ParksContainer from '../ParksContainer/ParksContainer';\nimport Park from '../Park/Park';\nimport './App.css';\nimport NoMatch from '../../components/NoMatch/NoMatch';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      parks: [],\n      error: \"\",\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    fetchParks()\n    .then(data => this.filterAndStoreParks(data))\n    .then(() => this.setState({isLoading: false}))\n    .catch(error => this.setState({error: error.message}))\n  }\n\n  filterAndStoreParks = (data) => {\n    let natlParks = data.filter(park => park.designation === \"National Park\");\n    natlParks.map(park => park.type = \"parks\")\n    this.props.storeParks(natlParks);\n    let natlMonts = data.filter(park => park.designation === \"National Monument\");\n    natlMonts.map(park => park.type = \"monuments\");\n    this.props.storeMonts(natlMonts);\n    let natlOthers = data.filter(park => park.designation !== \"National Park\" && park.designation !== \"National Monument\");\n    natlOthers.map(park => park.type = \"others\");\n    this.props.storeOthers(natlOthers);\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <header className=\"App-header\">\n          <NavLink to=\"/\" className=\"App-nav-text\">HOME</NavLink>\n          <NavLink to=\"/parks\" className=\"App-nav-text\">NATIONAL PARKS</NavLink>\n          <NavLink to=\"/monuments\" className=\"App-nav-text\">NATIONAL MONUMENTS</NavLink>\n          <NavLink to=\"/others\" className=\"App-nav-text\">OTHER SITES</NavLink>\n          <NavLink to=\"/favorites\" className=\"App-nav-text\">MY FAVORITES</NavLink>\n        </header>\n        {this.state.isLoading && <h2 className=\"App-welcome\">Welcome to NPS Helper</h2>}\n        {this.state.isLoading && <img src={Loading} alt=\"mountains animation\" className=\"App-loading\"/>}\n        {this.state.error && <h2 className=\"App-welcome\">{this.state.error}</h2>}\n        <Switch>\n          {!this.state.isLoading && <Route exact path='/' component={Home} />}\n          <Route exact path='/parks' render={() => <ParksContainer type={\"parks\"} />} />\n          <Route exact path='/monuments' render={() => <ParksContainer type={\"monts\"} />} />\n          <Route exact path='/others' render={() => <ParksContainer type={\"others\"} />} />\n          <Route exact path='/favorites' render={() => <ParksContainer type={\"favorites\"} />} />\n          <Route path='/parks/:parkCode' render={({ match }) => {\n            const { parkCode } = match.params;\n            const park = this.props.parks.find(park => park.parkCode === parkCode);\n            return <Park park={park}/>\n          }} />\n          <Route exact path='/monuments/:parkCode' render={({ match }) => {\n            const { parkCode } = match.params;\n            const park = this.props.monts.find(park => park.parkCode === parkCode);\n            return <Park park={park} />\n          }} />\n          <Route exact path='/others/:parkCode' render={({ match }) => {\n            const { parkCode } = match.params;\n            const park = this.props.others.find(park => park.parkCode === parkCode);\n            return <Park park={park} />\n          }} />\n          <Route exact path='/favorites/:parkCode' render={({ match }) => {\n            const { parkCode } = match.params;\n            const park = this.props.favorites.find(park => park.parkCode === parkCode);\n            return <Park park={park} />\n          }} />\n          {!this.state.isLoading && <Route component={NoMatch} />}\n        </Switch>\n      </main>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  parks: state.parks,\n  monts: state.monts,\n  others: state.others,\n  favorites: state.favorites\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  storeParks: parks => dispatch(storeParks(parks)),\n  storeMonts: monts => dispatch(storeMonts(monts)),\n  storeOthers: others => dispatch(storeOthers(others)),\n  addFavorite: park => dispatch(addFavorite(park)),\n  removeFavorite: park => dispatch(removeFavorite(park))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  props : PropTypes.shape({\n    addFavorite: PropTypes.func,\n    removeFavorite: PropTypes.func,\n    favorites: PropTypes.array,\n    parks: PropTypes.array,\n    others: PropTypes.array,\n    monts: PropTypes.array,\n    storeMonts: PropTypes.func,\n    storeOthers: PropTypes.func,\n    storeParks: PropTypes.func\n  })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './containers/App/App.js';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst router = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(router, document.getElementById('root'));"],"sourceRoot":""}